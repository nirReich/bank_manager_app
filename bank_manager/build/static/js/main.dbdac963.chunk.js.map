{"version":3,"sources":["Components/Action.js","Components/BalanceCard.jsx","Components/LoanCard.jsx","Components/BalanceWarning.jsx","Components/Client.js","Components/Login.js","Components/Register.js","Components/BalanceChangeBox.jsx","Components/Manager.js","Components/Editregister.js","Components/Transactions.jsx","Components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Action","props","useState","amount","setAmount","comp","setComp","className","type","placeholder","onChange","e","target","value","Button","variant","onClick","addAction","index","cancle","balanceCard","class","name","id","balance","LoanCard","context","useContext","clientsContext","newList","clients","filter","element","userIndex","userList","selectedUser","setSelectedUser","loanAmount","setloanAmount","warningMsg","setWarningMsg","confBtn","setConfBtn","amountHandler","isNaN","htmlFor","size","map","showLoanDetails","alert","parseInt","money","length","editClient","password","confirmLoan","disabled","handelLoanFlag","BalanceWarning","Client","flag","setFlag","loanFlag","setLoanFlag","dateObj","Date","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","newdate","handelFlag","getUTCHours","getUTCMinutes","Nav","defaultActiveKey","Item","to","Link","passClientToEdit","user","showAction","showLoan","LogIn","setUser","passWord","setPassWord","popover","Popover","Title","as","Content","HintBtn","OverlayTrigger","trigger","placement","overlay","pickClientName","pickClientPassword","Register","premission","actions","newClient","setNewClient","passConf","setPassConf","setData","data","toString","addClient","BalanceChangeBox","newBalance","setNewBalance","balanceChangeFunc","cancleBalanceChange","Manager","balanceFlag","showBalance","setShowBalance","clientIndex","Accordion","Card","Header","Toggle","eventKey","balanceChangeHandler","Collapse","Body","actionIndex","company","removeAction","removeClient","changePremission","showBalanceChange","clientEdit","client","setId","setName","setPassword","setMoney","Transactions","Footer","Container","Row","Col","xs","href","xmlns","width","height","fill","viewBox","d","React","createContext","App","setClients","setClientEdit","push","console","log","i","showActions","splice","Provider","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dbdac963.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default function Action(props) {\r\n\r\n    const [amount, setAmount] = useState('');\r\n    const [comp, setComp] = useState('');\r\n\r\n    //-------------------------------\r\n\r\n    return (\r\n        <div className=\"actionComp\">\r\n            <h4 className=\"headers\">New Transaction</h4>\r\n            <input type=\"number\" placeholder=\"Perceuse amount\" onChange={(e) => { setAmount(e.target.value) }} />\r\n            <br />\r\n            <br/>\r\n            <input type=\"text\" placeholder=\"Company name\" onChange={(e) => { setComp(e.target.value) }} />\r\n            <br />\r\n            <br/>\r\n\r\n           \r\n            <Button variant=\"success\" className=\"actionBtns\" onClick={() => { props.addAction(comp, amount, props.index) }}>Confirm</Button>\r\n            <Button variant=\"danger\" className=\"actionBtns\" onClick={() => { props.cancle() }}>Cancel</Button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function balanceCard(props) {\r\n    return (\r\n        <div className=\"balanceCard_Container\">\r\n            <p>\r\n            <p class=\"client_intro\">\r\n            Current balance for {props.name}\r\n            <br/>\r\n            ID number: {props.id}</p>\r\n\r\n            <div className=\"balanceFrame\">\r\n            <h3>{props.balance}</h3>\r\n            </div>\r\n            \r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport Client from './Client';\r\nimport { clientsContext } from '../App';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nexport default function LoanCard(props) {\r\n\r\n    //clients context from app js comp\r\n    let context = useContext(clientsContext);\r\n\r\n    const newList = context.clients.filter(element => element.id != context.clients[props.userIndex].id)\r\n    const [userList] = useState(newList);\r\n    const [selectedUser, setSelectedUser] = useState('');\r\n    const [loanAmount, setloanAmount] = useState('');\r\n    const [warningMsg, setWarningMsg] = useState('');\r\n    const [confBtn, setConfBtn] = useState(true);\r\n\r\n\r\n    const handelSelectedClient = (e) => {\r\n        setSelectedUser(e.target.value)\r\n\r\n    }\r\n\r\n    const amountHandler = (e) => {\r\n        if (isNaN(e.target.value)) {\r\n            setWarningMsg('Amount must be a number!')\r\n        }\r\n        else if (e.target.value <= 0) {\r\n            setWarningMsg('Amount must be greater then 0!')\r\n        }\r\n        else {\r\n            setWarningMsg('')\r\n            setConfBtn(false)\r\n            setloanAmount(e.target.value)\r\n        }\r\n\r\n    }\r\n\r\n    const confirmLoan = (index) => {\r\n\r\n        if (isNaN(loanAmount)) {\r\n\r\n        }\r\n        else if (loanAmount <= 0) {\r\n            alert('Amount must be greater then 0!')\r\n        }\r\n        else if (loanAmount > parseInt(context.clients[index].money)){\r\n            alert('Not Enough funds!')\r\n        }\r\n        else {\r\n\r\n            for (let index = 0; index < context.clients.length; index++) {\r\n                if (context.clients[index].id === selectedUser) {\r\n                    \r\n                    //plus money to selected user\r\n                    context.editClient(\r\n                        context.clients[index].id,\r\n                        context.clients[index].name,\r\n                        context.clients[index].password,\r\n                        parseInt(context.clients[index].money) + parseInt(loanAmount),\r\n                        index\r\n                    )\r\n                    //minus money to user\r\n                    context.editClient(\r\n                        context.clients[props.userIndex].id,\r\n                        context.clients[props.userIndex].name,\r\n                        context.clients[props.userIndex].password,\r\n                        parseInt(context.clients[props.userIndex].money) - parseInt(loanAmount),\r\n                        props.userIndex\r\n                    )\r\n                    alert(`loan of ${loanAmount} is confirmed!`)\r\n                    setloanAmount('')\r\n                    setConfBtn(!confBtn)\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const showLoanDetails = () => {\r\n        if (selectedUser) {\r\n            return (\r\n                <form>\r\n                    <div>\r\n                        <label htmlFor=\"loanAmount\">\r\n                            Set loan amount \r\n                    </label>\r\n                        <input className=\"usersInputLoan\" type=\"number\" placeholder=\"Amount\" onChange={amountHandler} />\r\n                        <h6 className=\"amountWarning\">{warningMsg}</h6>\r\n                    </div>\r\n                    \r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n    const handelCancelLoan=()=>{\r\n        setSelectedUser('')\r\n        setloanAmount('')\r\n        props.handelLoanFlag()\r\n    }\r\n\r\n\r\n    //-------------------------------------------------------------------------\r\n    return (\r\n        <div className=\"actionComp\">\r\n\r\n            <h4 className=\"headers\">Creat New Loan</h4>\r\n            <div>\r\n                <label htmlFor=\"users\">Pick user for your loan </label>\r\n\r\n                <select className=\"usersInputLoan\" id=\"users\" name=\"users\" size=\"1\" value={selectedUser} onChange={handelSelectedClient}>\r\n                    <option value=''></option>\r\n                    {userList.map((element, index) => {\r\n                        return (\r\n                            <option value={element.id}>{element.name}</option>\r\n                        )\r\n                    })}\r\n\r\n                </select>\r\n                {showLoanDetails()}\r\n                <div>\r\n                        <Button onClick={() => confirmLoan(props.userIndex)} disabled={confBtn}>Confirm</Button>\r\n                        <Button variant=\"danger\" onClick={() => handelCancelLoan()} >Cancle</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function BalanceWarning(props) {\r\n    return (\r\n        <div className=\"balanceWarnContainer\">\r\n            <h4>\r\n            Your balance is {props.balance}\r\n                <br/>\r\n            Cant create new transactions with negative balance!\r\n            </h4>\r\n\r\n            <Button variant=\"danger\" onClick={() => { props.cancle() }}>Cancel</Button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport Action from './Action';\r\nimport BalanceCard from './BalanceCard';\r\nimport LoanCard from './LoanCard';\r\nimport BalanceWarning from './BalanceWarning';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\n\r\n//-------------------------------------------------------------------\r\n//propsname=props.user,index\r\nexport default function Client(props) {\r\n    \r\n    const [flag, setFlag] = useState(false);\r\n    const [loanFlag, setLoanFlag] = useState(false);\r\n    \r\n   \r\n\r\n    const dateObj = new Date();\r\n    const month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n    const day = dateObj.getUTCDate();\r\n    const year = dateObj.getUTCFullYear();\r\n    const hour = dateObj.getUTCHours();\r\n    const minuts = dateObj.getUTCMinutes();\r\n    const newdate = day + \"/\" + month + \"/\" + year;\r\n    const newdateTime =hour +\":\"+ minuts + \"  \" + day + \"/\" + month + \"/\" + year;\r\n\r\n\r\n\r\n\r\n    const handelFlag=()=>{\r\n        setFlag(!flag)\r\n    }\r\n\r\n    const handelLoanFlag=()=>{\r\n        setLoanFlag(!loanFlag)\r\n    }\r\n\r\n    let showAction = () => {\r\n        if (flag) {\r\n\r\n            if (props.user.money <= 0) {\r\n                return <BalanceWarning balance={props.user.money} cancle={handelFlag}/>\r\n            }\r\n            else {            \r\n                return <Action addAction={props.addAction} index={props.index} user={props.user} cancle={handelFlag}/>\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    let showLoan = () => {\r\n        if (loanFlag) {\r\n\r\n            if (props.user.money <= 0) {\r\n                return <BalanceWarning balance={props.user.money} cancle={handelFlag}/>\r\n            }\r\n            else {            \r\n                return <LoanCard userIndex = {props.index} handelLoanFlag={handelLoanFlag}/>\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    //----------------------------------------------- \r\n    return (\r\n        <div>\r\n            <Nav variant=\"tabs\" defaultActiveKey=\"/home\" className=\"navBar\">\r\n                <Nav.Item>\r\n                    <Link to={'/'}><Button variant=\"danger\" className=\"exitBtn\">Exit</Button></Link>\r\n                </Nav.Item>\r\n\r\n                <Nav.Item>\r\n                    <Nav.Link ><Link to={'/edit'} onClick={() => { return props.passClientToEdit(props.index) }}>Edit Profile</Link></Nav.Link>\r\n                </Nav.Item>\r\n\r\n                <Nav.Item>\r\n                    <Nav.Link ><Link to={`/${props.user.name}_transactions`}>Transactions</Link></Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n            <div className=\"clientHeader\">\r\n            <div className=\"dateDiv\">{newdate}</div>\r\n            <h1 className=\"headers\"> Welcom {props.user.name}</h1>\r\n            </div>\r\n          \r\n            <BalanceCard balance={props.user.money} name={props.user.name} id={props.user.id} />\r\n            <Button className=\"transBtn\" variant=\"success\" onClick={() => { handelFlag() }}> Create New Transaction</Button>\r\n            <Button className=\"transBtn loanBtn\"  onClick={() => { handelLoanFlag() }}> Create new loan</Button>\r\n\r\n            {showAction()}\r\n            {showLoan()}\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover'\r\n\r\n\r\nexport default function LogIn(props) {\r\n    const [user, setUser] = useState('');\r\n    const [passWord, setPassWord] = useState('');\r\n    \r\n\r\n\r\n    //handels the enter button validation\r\n    // change to switch!!!!\r\n    const setTheLink = () => {\r\n\r\n        if (user === 'admin' && passWord === 'admin') {\r\n            return <Link to={'/admin'}><Button variant=\"success\" className=\"loginButtonsStyle\">Enter</Button></Link>\r\n        }\r\n        else if (!props.pickClientName(user)) {\r\n            return <Button variant=\"success\" className=\"loginButtonsStyle\" onClick={() => { alert('User not found!') }}>Enter</Button>\r\n        }\r\n        else if (!props.pickClientPassword(passWord)) {\r\n            return <Button variant=\"success\" className=\"loginButtonsStyle\" onClick={() => { alert('Password Incorrect!') }}>Enter</Button>\r\n        }\r\n        else if (props.pickClientName(user) && props.pickClientPassword(passWord)) {\r\n            return <Link to={`/${user}`}><Button variant=\"success\" className=\"loginButtonsStyle\">Enter</Button></Link>\r\n        }\r\n        else { return <Button variant=\"success\" className=\"loginButtonsStyle\" onClick={() => { alert('User not found!') }}>Enter</Button> }\r\n\r\n    }\r\n\r\n\r\n    // hint button\r\n    const popover = (\r\n        <Popover id=\"popover-basic\">\r\n          <Popover.Title as=\"h3\">Admin/Client entrance</Popover.Title>\r\n          <Popover.Content> \r\n            <strong>Admin:</strong>username: admin password: admin\r\n            <br/>\r\n            <strong>Client:</strong> username: rick sanchez password: 111111\r\n            \r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n      \r\n      const HintBtn = () => (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n          <Button className=\"hintBtn\" variant=\"dark\">Hint</Button>\r\n        </OverlayTrigger>\r\n      );\r\n      \r\n     \r\n\r\n\r\n\r\n    //---------------------------------------\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <div className=\"loginHeader\">\r\n\r\n                <h1 className=\"headers\">Banking- Home budget app</h1>\r\n\r\n            </div>\r\n\r\n            <div className=\"loginBody\">\r\n                <div className=\"welcomNote\">\r\n                    Welcom to Banking! The best home budget management app in the world!\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <HintBtn  />\r\n\r\n                <div className=\"loginInpDiv\">\r\n\r\n                    <label>\r\n                        User Name\r\n                        <input type=\"text\" placeholder=\"user name\" className=\"loginInputs\" onChange={(e) => { setUser(e.target.value) }} />\r\n                    </label>\r\n\r\n                    <br />\r\n\r\n                    <label>\r\n                        Password\r\n                        <input type=\"Password\" placeholder=\"password\" className=\"loginInputs\" onChange={(e) => { setPassWord(e.target.value) }} />\r\n                    </label>\r\n\r\n                </div>\r\n\r\n                {setTheLink()}\r\n                <br />\r\n                <br />\r\n                <p >New in here?</p>\r\n                <Link to={'/register'}><Button variant=\"primary\" className=\"loginButtonsStyle\">Create New User</Button></Link>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nexport default function Register(props) {\r\n\r\n    const [newClient, setNewClient] = useState({ id: '', name: '', password: '', money: '', premission: false, actions: [] });\r\n    const [passConf, setPassConf] = useState('')\r\n\r\n\r\n\r\n\r\n    let setData = (e) => {\r\n        let data = e.target.value\r\n        if (e.target.id === \"id\") {\r\n            if (isNaN(e.target.value)) {\r\n                alert('numbers only!')\r\n            }\r\n            else { setNewClient({ ...newClient, id: data }) }\r\n\r\n        }\r\n        else if (e.target.id === \"name\") {\r\n\r\n            setNewClient({ ...newClient, name: data })\r\n\r\n        }\r\n        else if (e.target.id === 'password') {\r\n\r\n            setNewClient({ ...newClient, password: data })\r\n\r\n        }\r\n        else if (e.target.id === \"passwordConf\") {\r\n            setPassConf(data)\r\n        }\r\n        else {\r\n\r\n            setNewClient({ ...newClient, money: data })\r\n\r\n        }\r\n    }\r\n\r\n    let sendClient = () => {\r\n        if (isNaN(newClient.id) === false && newClient.id.toString().length < 9) {\r\n            alert('i.d length must be 9 and numbers only!')\r\n        }\r\n        else if (newClient.name.length < 4) {\r\n            alert('name must be longer then 4 letters!')\r\n        }\r\n        else if (newClient.password.length < 6) {\r\n            alert('password must be at least 6 letters')\r\n        }\r\n        else if (newClient.password !== passConf) {\r\n            alert('password not same with confirme!')\r\n        }\r\n        else if (isNaN(newClient.money) || newClient.money > 1000000 || newClient.money < 0) {\r\n            alert('money amount must be between 0 and 1000000!')\r\n        }\r\n        else {\r\n            props.addClient(newClient)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <div className=\"registerHeader\">\r\n                <h1 className=\"headers\">Welcom New User</h1>\r\n            </div>\r\n\r\n            <div className=\"newUserDataCard\">\r\n\r\n\r\n                <h4>Please Register Here</h4>\r\n\r\n                <label>\r\n                    User id\r\n                    <input type=\"text\" id=\"id\" className=\"registerInputs\" placeholder=\"id\" onChange={setData} />\r\n                </label>\r\n                \r\n\r\n                <br />\r\n\r\n                <label>\r\n                    User Name\r\n                <input type=\"text\" id=\"name\" className=\"registerInputs\" placeholder=\"user name\" onChange={setData} />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Password\r\n                <input type=\"text\" id=\"password\" className=\"registerInputs\" placeholder=\"Password\" onChange={setData} />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Confirm Password\r\n                <input type=\"text\" id=\"passwordConf\" className=\"registerInputs\" placeholder=\"Confirm password\" onChange={setData} />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Cash Balance\r\n                <input type=\"text\" id=\"money\" className=\"registerInputs\" placeholder=\" Cash Balance\" onChange={setData} />\r\n                </label>\r\n\r\n                <br />\r\n                <Link to={'/'}> <Button variant=\"success\" className=\"registerBtn\" onClick={() => { sendClient() }}>Create</Button></Link>\r\n\r\n                <br />\r\n                <Link to={'/'}><Button variant=\"primary\" className=\"registerBtn\">Back</Button></Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function BalanceChangeBox(props) {\r\n    const [newBalance,setNewBalance] = useState('')\r\n    \r\n    return (\r\n        <div className=\"balanceChangeCompContainer\">\r\n            <h3>Balance Change For {props.name}</h3>\r\n            <br/>\r\n            <p>Current Balance</p>\r\n            \r\n            <div className=\"balanceCahngeFrame\">\r\n            <h3>{props.balance}</h3>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <p>Enter new balance</p>\r\n                <input type=\"number\" placeholder=\"New Balance\" value={newBalance} onChange={(e) => { setNewBalance(e.target.value) }}/>\r\n                <br/>\r\n                <Button variant=\"success inAppButtons\" onClick={()=>{props.balanceChangeFunc(newBalance,props.index)}}>Confirm</Button>\r\n                <br/>\r\n                <Button variant=\"danger inAppButtons\" onClick={()=>{props.cancleBalanceChange()}}>Cancle</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport BalanceChangeBox from './BalanceChangeBox';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Button from 'react-bootstrap/Button'\r\nimport balanceCard from './BalanceCard';\r\n\r\n\r\n\r\nexport default function Manager(props) {\r\n\r\n    const [flag, setFlag] = useState(1)\r\n\r\n    const [showBalance, setShowBalance] = useState({\r\n        balanceFlag: false,\r\n        index: '',\r\n        balance: ''\r\n    })\r\n\r\n    const balanceChangeHandler = (clientIndex) => {\r\n        showBalance.balanceFlag = !showBalance.balanceFlag\r\n        showBalance.index = clientIndex\r\n        showBalance.balance = props.clients[clientIndex].name\r\n        setShowBalance({ ...showBalance })\r\n    }\r\n\r\n    const cancleBalanceChange = () => {\r\n        showBalance.balanceFlag = !showBalance.balanceFlag\r\n        setShowBalance({ ...showBalance })\r\n    }\r\n\r\n    const showBalanceChange = () => {\r\n        if (showBalance.balanceFlag) {\r\n            return <BalanceChangeBox cancleBalanceChange={cancleBalanceChange} name={props.clients[showBalance.index].name} index={showBalance.index} balance={props.clients[showBalance.index].money} balanceChangeFunc={props.balanceChangeFunc} />\r\n        }\r\n    }\r\n\r\n    const premissionBtn = (index) => {\r\n        if (props.clients[index].premission) {\r\n            return \"success\"\r\n        }\r\n        return \"danger\"\r\n    }\r\n\r\n\r\n    //---------------------------------------------------------------\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"adminHeader\">\r\n                <h1 className=\"headers\">Admin Page</h1>\r\n            </div>\r\n\r\n            {props.clients.map((element, clientIndex) => {\r\n                return <Accordion defaultActiveKey=\"0\">\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <h4 > {element.name}</h4>\r\n                            <h5 > {element.id}</h5>\r\n                            <div className=\"balanceFrameManeger\">\r\n                                <h3>{element.money}</h3>\r\n                            </div>\r\n\r\n\r\n                            <Accordion.Toggle as={Button} variant=\"link\" eventKey={flag}>\r\n                                <Button variant=\"primary inAppButtons\">Show</Button>\r\n                            </Accordion.Toggle>\r\n                            <br />\r\n                            <Button variant=\"danger inAppButtons\" onClick={() => { balanceChangeHandler(clientIndex) }}>Balance Cange</Button>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey={flag}>\r\n                            <Card.Body>\r\n\r\n                                {element.actions.map((e, actionIndex) => {\r\n                                    return (\r\n\r\n                                        <div className=\"row mb-1\">\r\n                                            <div className=\"col-1\"></div>\r\n                                            <div className=\"col-5\">{e.company}</div>\r\n                                            <div className=\"col-4\">{e.amount}</div>\r\n                                            <div className=\"col-1\"></div>\r\n                                            <div className=\"col-1\"><Button variant=\"danger\" onClick={() => { props.removeAction(clientIndex, actionIndex) }}> X </Button></div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                                <div className=\"row\">\r\n                                    <div>\r\n                                    <Button variant=\"danger\" className=\"cancelBtn\" onClick={() => { props.removeClient(clientIndex) }}>Erase {element.name}</Button>\r\n\r\n                                    </div>\r\n                                    <div>\r\n\r\n                                    <Button variant={premissionBtn(clientIndex)} className=\"premissionBtn\" onClick={() => { props.changePremission(clientIndex) }}>Premission</Button>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n                            </Card.Body>\r\n\r\n                        </Accordion.Collapse>\r\n\r\n                    </Card>\r\n                </Accordion>\r\n            })}\r\n\r\n            <br />\r\n\r\n            <Link to={'/'}>  <Button variant=\"primary\" className=\"inAppButtons\">Exit</Button></Link>\r\n\r\n            {showBalanceChange()}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default function Register(props) {\r\n\r\n    const [id, setId] = useState(props.clientEdit.client.id);\r\n    const [name, setName] = useState(props.clientEdit.client.name);\r\n    const [password, setPassword] = useState(props.clientEdit.client.password);\r\n    const [money, setMoney] = useState(props.clientEdit.client.money);\r\n    \r\n\r\n    let editClient = () => {//validation and if OK send it to clients list\r\n        if (isNaN(id) === false && id.toString().length < 9) {\r\n            alert('i.d length must be 9 and numbers only!')\r\n        }\r\n        else if (name.length < 4) {\r\n            alert('name must be longer then 4 letters!')\r\n        }\r\n        else if (password.length < 6) {\r\n            alert('password must be at least 6 letters')\r\n        }\r\n        else if (isNaN(money) || money > 1000000 || money < 0) {\r\n            alert('money amount must be between 0 and 1000000!')\r\n        }\r\n        else {\r\n            props.editClient(id, name, password, money, props.clientEdit.index)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"editRegisterHeader\">\r\n            <h1 className=\"headers\">Edit Details</h1>\r\n            </div>\r\n\r\n            <br />\r\n\r\n        <div className=\"editInputs\">\r\n            <label>\r\n                id:\r\n                <input className=\"editInp\" type=\"text\" id=\"id\" value={id} onChange={(e) => { setId(e.target.value) }} />\r\n            </label>\r\n            <br />\r\n            <label>\r\n                User Name:\r\n                <input className=\"editInp\" type=\"text\" id=\"name\" value={name} onChange={(e) => { setName(e.target.value) }} />\r\n            </label>\r\n            <br />\r\n            <label>\r\n                Password:\r\n                <input className=\"editInp\" type=\"text\" id=\"password\" value={password} onChange={(e) => { setPassword(e.target.value) }} />\r\n            </label>\r\n            <br />\r\n            <label>\r\n                Cash Balance:\r\n                <input className=\"editInp\" type=\"text\" id=\"money\" value={money} disabled={!props.clientEdit.client.premission} onChange={(e) => { setMoney(e.target.value) }}  />\r\n            </label>\r\n            </div>\r\n            <div className=\"editButtonsDiv\">\r\n            <Link to={'/'}> <Button variant=\"primary\" className=\"editButtons\" onClick={() => { editClient() }}>Edit</Button></Link>\r\n            <br />\r\n            \r\n            <Link to={`/${props.clientEdit.client.name}`}>  <Button variant=\"danger\" className=\"editButtons\">Back</Button></Link>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default function Transactions(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"transactionsHeader\">\r\n\r\n            <h3>Transactions List for {props.clients.name}</h3>\r\n            </div>\r\n        <div className=\"transactionsTable\">\r\n\r\n        \r\n            {/* transactions list map */}\r\n            {props.clients.actions.map((element, actionIndex) => {\r\n                return (\r\n\r\n                    <div className=\"row transactionsLines\">\r\n                        <div className=\"col-3\"></div>\r\n                        <div className=\"col-3 \">{element.company}</div>\r\n                        <div className=\"col-3\">{element.amount}</div>\r\n                        <div className=\"col-3\"></div>\r\n                    </div>\r\n                )\r\n            })}\r\n</div>\r\n            <Link to={`/${props.clients.name}`}> <Button variant=\"primary\" className=\"inAppButtons\">Back</Button> </Link>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"footerDiv\">\r\n            <Container>\r\n                <Row>\r\n                    <Col xs=\"2\">Created by <span className=\"myName\">Nir Reich</span></Col>\r\n                    <Col xs=\"2\"></Col>\r\n                    <Col xs=\"1\">{/* github link */}\r\n                        <a href=\"https://github.com/nirReich\" target=\"_blank\">\r\n\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"white\" class=\"bi bi-github\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z\" />\r\n                            </svg>\r\n                        </a>\r\n                    </Col>\r\n                    <Col xs=\"1\">\r\n                        {/* linkedin link */}\r\n                        <a href=\"http://www.linkedin.com/in/nir-reich\" target=\"_blank\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"white\" class=\"bi bi-linkedin\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z\" />\r\n                            </svg>\r\n                        </a>\r\n                    </Col>\r\n                    <Col xs=\"1\">\r\n                        {/* email link */}\r\n                        <a href=\"mailto:reich.nir@gmail.com\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"white\" class=\"bi bi-envelope\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1H2zm13 2.383-4.758 2.855L15 11.114v-5.73zm-.034 6.878L9.271 8.82 8 9.583 6.728 8.82l-5.694 3.44A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.739zM1 11.114l4.758-2.876L1 5.383v5.73z\" />\r\n                            </svg>\r\n                        </a>\r\n                    </Col>\r\n                    <Col xs=\"1\">\r\n                        {/* facebook link */}\r\n                        <a href=\"https://www.facebook.com/nir.reich\" target=\"_blank\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"white\" class=\"bi bi-facebook\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z\" />\r\n                            </svg>\r\n                        </a>\r\n                    </Col>\r\n                    <Col xs=\"2\">\r\n                    </Col>\r\n                    <Col xs=\"2\"></Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Client from './Components/Client';\nimport Login from './Components/Login';\nimport Register from './Components/Register';\nimport Manager from './Components/Manager';\nimport Editregister from './Components/Editregister';\nimport Transactions from './Components/Transactions';\nimport Footer from './Components/Footer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport const clientsContext = React.createContext();\n\n//-----------------------------------------------------------------------------------------------------------\nexport default function App() {\n  //hooks\n  const [clients, setClients] = useState([\n    { \n    id: '123456789',\n    name: 'rick sanchez',\n    password: '111111',\n    money: '10000',\n    premission: false,\n    actions: [{ company: 'shufersal', amount: '500' }, { company: 'sonol', amount: '250' }] \n  },\n    { \n    id: '987654321',\n    name: 'johnny amir',\n    password: '222222',\n    money: '20000',\n    premission: true,\n    actions: [{ company: 'pazgas', amount: '150' }, { company: 'castro', amount: '400' },]\n  }\n  ])\n  const [clientEdit, setClientEdit] = useState({ client: '', index: '' });\n\n  //methods\n  const addClient = (newClient) => {//add new client. from register comp\n    setClients([...clients, { ...newClient }])\n  }\n\n  const addAction = (comp, amount, index) => {//adds new action. from client comp\n    clients[index].actions.push({ company: comp, amount: amount })\n    clients[index].money = clients[index].money - amount\n    console.log(clients[index].money);\n    setClients([...clients]);\n  }\n\n\n\n//pick the spc client from clients for the login page\n  const pickClientName = (user) => {\n    for (let i = 0; i < clients.length; i++) {\n\n      if (clients[i].name === user ) {\n        return true;\n      }\n    }\n    return false;\n  }\n  const pickClientPassword = (password)=>{\n    for (let i = 0; i < clients.length; i++) {\n      if (clients[i].password === password) {\n        \n        return true;\n      }\n    }\n    return false;\n  }\n\n  const showActions = (i) => {//show action list on manager page\n\n    return clients[i].actions.map((e) => { return e.company })\n  }\n\n  const passClientToEdit = (i) => {//pick spc client to edit\n\n    setClientEdit({ client: clients[i], index: i });\n  }\n\n  const editClient = (id, name, password, money, index) => {// edit the client changes sent from edit page\n\n    clients[index].id = id\n    clients[index].name = name\n    clients[index].password = password\n    clients[index].money = money\n    setClients([...clients])\n  }\n\n  const removeAction = (clientIndex, actionIndex) => {//remove the actions from theclient list. from manager page\n    clients[clientIndex].actions.splice(actionIndex, 1)\n    setClients([...clients]);\n  }\n\n  const removeClient = (index) => {// remove client from clients list. from manager page.\n\n    clients.splice(index, 1)\n    setClients([...clients]);\n  }\n\n  const balanceChangeFunc= (balance,index)=>{\n    if (!isNaN(balance) && balance != '') {\n      clients[index].money = balance\n      setClients([...clients])\n\n    }\n  }\n\n  const changePremission =(index)=> {\n    clients[index].premission = !clients[index].premission\n    setClients()\n    setClients([...clients]);\n  }\n\n\n  //------------------------------------------------------------------------------\n  return (\n    <div className=\"App\">\n      <clientsContext.Provider value={{clients:clients, editClient:editClient}}>\n      <Router>\n\n        <Switch>\n          <Route exact path={'/'} component={() => { return <Login clients={clients} pickClientName={pickClientName} pickClientPassword={pickClientPassword} /> }} />\n\n          {clients.map((e, i) => { return <Route exact path={`/${e.name}`} component={() => { return   <Client addAction={addAction} user={clients[i]} index={i} passClientToEdit={passClientToEdit} clients={clients} /> }} /> })}\n          {clients.map((e, i) => { return <Route exact path={`/${e.name}_transactions`} component={() => { return <Transactions clients={clients[i]} /> }} /> })}\n          <Route exact path={'/register'} component={() => { return <Register addClient={addClient} /> }} />\n          <Route exact path={'/edit'} component={() => { return <Editregister editClient={editClient} clientEdit={clientEdit} addClient={addClient} /> }} />\n          <Route exact path={'/admin'} component={() => { return <Manager changePremission={changePremission} balanceChangeFunc={balanceChangeFunc} removeClient={removeClient} removeAction={removeAction} clients={clients} showActions={showActions} /> }} />\n\n        </Switch>\n      </Router>\n      <Footer/>\n      </clientsContext.Provider>\n    </div>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}