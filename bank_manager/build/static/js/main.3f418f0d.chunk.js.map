{"version":3,"sources":["Components/Action.js","Components/BalanceCard.jsx","Components/LoanCard.jsx","Components/BalanceWarning.jsx","Components/Client.js","Components/Login.js","Components/Register.js","Components/BalanceChangeBox.jsx","Components/Manager.js","Components/Editregister.js","Components/Transactions.jsx","App.js","serviceWorker.js","index.js"],"names":["Action","props","useState","amount","setAmount","comp","setComp","className","type","placeholder","onChange","e","target","value","Button","variant","onClick","addAction","index","cancle","balanceCard","class","name","id","balance","LoanCard","context","useContext","clientsContext","newList","clients","filter","element","userIndex","userList","selectedUser","setSelectedUser","loanAmount","setloanAmount","warningMsg","setWarningMsg","confBtn","setConfBtn","amountHandler","isNaN","htmlFor","size","map","showLoanDetails","alert","length","editClient","password","money","confirmLoan","disabled","handelLoanFlag","BalanceWarning","Client","flag","setFlag","loanFlag","setLoanFlag","dateObj","Date","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","newdate","handelFlag","getUTCHours","getUTCMinutes","Nav","defaultActiveKey","Item","to","Link","passClientToEdit","user","showAction","showLoan","LogIn","setUser","passWord","setPassWord","pickClientName","pickClientPassword","Register","premission","actions","newClient","setNewClient","passConf","setPassConf","setData","data","toString","addClient","BalanceChangeBox","newBalance","setNewBalance","balanceChangeFunc","cancleBalanceChange","Manager","balanceFlag","showBalance","setShowBalance","clientIndex","Accordion","Card","Header","Toggle","as","eventKey","balanceChangeHandler","Collapse","Body","actionIndex","company","changePremission","removeAction","removeClient","showBalanceChange","clientEdit","client","setId","setName","setPassword","setMoney","Transactions","React","createContext","App","setClients","setClientEdit","push","console","log","i","showActions","splice","Provider","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3f418f0d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default function Action(props) {\r\n\r\n    const [amount, setAmount] = useState('');\r\n    const [comp, setComp] = useState('');\r\n\r\n    //-------------------------------\r\n\r\n    return (\r\n        <div className=\"actionComp\">\r\n            <h4 className=\"headers\">New Expense</h4>\r\n            <input type=\"number\" placeholder=\"Perceuse amount\" onChange={(e) => { setAmount(e.target.value) }} />\r\n            <br />\r\n            <br/>\r\n            <input type=\"text\" placeholder=\"Company name\" onChange={(e) => { setComp(e.target.value) }} />\r\n            <br />\r\n            <br/>\r\n\r\n           \r\n            <Button variant=\"success\" className=\"actionBtns\" onClick={() => { props.addAction(comp, amount, props.index) }}>Confirm</Button>\r\n            <Button variant=\"danger\" className=\"actionBtns\" onClick={() => { props.cancle() }}>Cancel</Button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function balanceCard(props) {\r\n    return (\r\n        <div className=\"balanceCard_Container\">\r\n            <p>\r\n            <p class=\"client_intro\">\r\n            Current balance for {props.name}\r\n            <br/>\r\n            ID number: {props.id}</p>\r\n\r\n            <div className=\"balanceFrame\">\r\n            <h3>{props.balance}</h3>\r\n            </div>\r\n            \r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport Client from './Client';\r\nimport { clientsContext } from '../App';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nexport default function LoanCard(props) {\r\n\r\n    //clients context from app js comp\r\n    let context = useContext(clientsContext);\r\n\r\n    const newList = context.clients.filter(element => element.id != context.clients[props.userIndex].id)\r\n    const [userList, setUserList] = useState(newList);\r\n    const [selectedUser, setSelectedUser] = useState('');\r\n    const [loanAmount, setloanAmount] = useState('');\r\n    const [warningMsg, setWarningMsg] = useState('');\r\n    const [confBtn, setConfBtn] = useState(true);\r\n\r\n\r\n    const handelSelectedClient = (e) => {\r\n        setSelectedUser(e.target.value)\r\n\r\n    }\r\n\r\n    const amountHandler = (e) => {\r\n        if (isNaN(e.target.value)) {\r\n            setWarningMsg('Amount must be a number!')\r\n        }\r\n        else if (e.target.value <= 0) {\r\n            setWarningMsg('Amount must be greater then 0!')\r\n        }\r\n        else {\r\n            setWarningMsg('')\r\n            setConfBtn(false)\r\n            setloanAmount(e.target.value)\r\n        }\r\n\r\n    }\r\n\r\n    const confirmLoan = () => {\r\n\r\n        if (isNaN(loanAmount)) {\r\n\r\n        }\r\n        else if (loanAmount <= 0) {\r\n            alert('Amount must be greater then 0!')\r\n        }\r\n        else {\r\n\r\n            for (let index = 0; index < context.clients.length; index++) {\r\n                if (context.clients[index].id === selectedUser) {\r\n                    debugger\r\n                    //plus money to selected user\r\n                    context.editClient(\r\n                        context.clients[index].id,\r\n                        context.clients[index].name,\r\n                        context.clients[index].password,\r\n                        (context.clients[index].money + loanAmount),\r\n                        index\r\n                    )\r\n                    //minus money to user\r\n                    context.editClient(\r\n                        context.clients[props.userIndex].id,\r\n                        context.clients[props.userIndex].name,\r\n                        context.clients[props.userIndex].password,\r\n                        (context.clients[props.userIndex].money - loanAmount),\r\n                        props.userIndex\r\n                    )\r\n                    alert(`loan of ${loanAmount} is confirmed!`)\r\n                    setloanAmount('')\r\n                    setConfBtn(!confBtn)\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const showLoanDetails = () => {\r\n        if (selectedUser) {\r\n            return (\r\n                <form>\r\n                    <div>\r\n                        <label htmlFor=\"loanAmount\">\r\n                            Set loan amount:\r\n                    </label>\r\n                        <input type=\"number\" placeholder=\"Amount\" onChange={amountHandler} />\r\n                        <h6 className=\"amountWarning\">{warningMsg}</h6>\r\n                    </div>\r\n                    \r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n    const handelCancelLoan=()=>{\r\n        setSelectedUser('')\r\n        setloanAmount('')\r\n        props.handelLoanFlag()\r\n    }\r\n\r\n\r\n    //-------------------------------------------------------------------------\r\n    return (\r\n        <div className=\"actionComp\">\r\n\r\n            <h4 className=\"headers\">Creat New Loan</h4>\r\n            <div>\r\n                <label htmlFor=\"users\">Pick user for your loan:</label>\r\n\r\n                <select id=\"users\" name=\"users\" size=\"1\" value={selectedUser} onChange={handelSelectedClient}>\r\n                    <option value=''></option>\r\n                    {userList.map((element, index) => {\r\n                        return (\r\n                            <option value={element.id}>{element.name}</option>\r\n                        )\r\n                    })}\r\n\r\n                </select>\r\n                {showLoanDetails()}\r\n                <div>\r\n                        <Button onClick={() => confirmLoan()} disabled={confBtn}>Confirm</Button>\r\n                        <Button variant=\"danger\" onClick={() => handelCancelLoan()} >Cancle</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function BalanceWarning(props) {\r\n    return (\r\n        <div className=\"balanceWarnContainer\">\r\n            <h4>\r\n            Your balance is {props.balance}\r\n                <br/>\r\n            Cant create new transactions with negative balance!\r\n            </h4>\r\n\r\n            <Button variant=\"danger\" onClick={() => { props.cancle() }}>Cancel</Button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport Action from './Action';\r\nimport BalanceCard from './BalanceCard';\r\nimport LoanCard from './LoanCard';\r\nimport BalanceWarning from './BalanceWarning';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\n\r\n//-------------------------------------------------------------------\r\n//propsname=props.user,index\r\nexport default function Client(props) {\r\n    \r\n    const [flag, setFlag] = useState(false);\r\n    const [loanFlag, setLoanFlag] = useState(false);\r\n    \r\n   \r\n\r\n    const dateObj = new Date();\r\n    const month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n    const day = dateObj.getUTCDate();\r\n    const year = dateObj.getUTCFullYear();\r\n    const hour = dateObj.getUTCHours();\r\n    const minuts = dateObj.getUTCMinutes();\r\n    const newdate = day + \"/\" + month + \"/\" + year;\r\n    const newdateTime =hour +\":\"+ minuts + \"  \" + day + \"/\" + month + \"/\" + year;\r\n\r\n\r\n\r\n\r\n    const handelFlag=()=>{\r\n        setFlag(!flag)\r\n    }\r\n\r\n    const handelLoanFlag=()=>{\r\n        setLoanFlag(!loanFlag)\r\n    }\r\n\r\n    let showAction = () => {\r\n        if (flag) {\r\n\r\n            if (props.user.money <= 0) {\r\n                return <BalanceWarning balance={props.user.money} cancle={handelFlag}/>\r\n            }\r\n            else {            \r\n                return <Action addAction={props.addAction} index={props.index} user={props.user} cancle={handelFlag}/>\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    let showLoan = () => {\r\n        if (loanFlag) {\r\n\r\n            if (props.user.money <= 0) {\r\n                return <BalanceWarning balance={props.user.money} cancle={handelFlag}/>\r\n            }\r\n            else {            \r\n                return <LoanCard userIndex = {props.index} handelLoanFlag={handelLoanFlag}/>\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    //----------------------------------------------- \r\n    return (\r\n        <div>\r\n            <Nav variant=\"tabs\" defaultActiveKey=\"/home\" className=\"navBar\">\r\n                <Nav.Item>\r\n                    <Link to={'/'}><Button variant=\"danger\" className=\"exitBtn\">Exit</Button></Link>\r\n                </Nav.Item>\r\n\r\n                <Nav.Item>\r\n                    <Nav.Link ><Link to={'/edit'} onClick={() => { return props.passClientToEdit(props.index) }}>Edit Profile</Link></Nav.Link>\r\n                </Nav.Item>\r\n\r\n                <Nav.Item>\r\n                    <Nav.Link ><Link to={`/${props.user.name}_transactions`}>Transactions</Link></Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n            <div className=\"clientHeader\">\r\n            <div className=\"dateDiv\">{newdate}</div>\r\n            <h1 className=\"headers\"> Welcom {props.user.name}</h1>\r\n            </div>\r\n          \r\n            <BalanceCard balance={props.user.money} name={props.user.name} id={props.user.id} />\r\n            <Button className=\"transBtn\" variant=\"success\" onClick={() => { handelFlag() }}> Create New Transaction</Button>\r\n            <Button className=\"transBtn loanBtn\"  onClick={() => { handelLoanFlag() }}> Create new loan</Button>\r\n\r\n            {showAction()}\r\n            {showLoan()}\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default function LogIn(props) {\r\n    const [user, setUser] = useState('');\r\n    const [passWord, setPassWord] = useState('');\r\n\r\n\r\n    //handels the enter button validation\r\n    // change to switch!!!!\r\n    const setTheLink = () => {\r\n\r\n        if (user === 'admin' && passWord === 'admin') {\r\n            return <Link to={'/admin'}><Button variant=\"success\" className=\"loginButtonsStyle\">Enter</Button></Link>\r\n        }\r\n        else if (!props.pickClientName(user)) {\r\n            return <Button variant=\"success\" className=\"loginButtonsStyle\" onClick={() => { alert('User not found!') }}>Enter</Button>\r\n        }\r\n        else if (!props.pickClientPassword(passWord)) {\r\n            return <Button variant=\"success\" className=\"loginButtonsStyle\" onClick={() => { alert('Password Incorrect!') }}>Enter</Button>\r\n        }\r\n        else if (props.pickClientName(user) && props.pickClientPassword(passWord)) {\r\n            return <Link to={`/${user}`}><Button variant=\"success\" className=\"loginButtonsStyle\">Enter</Button></Link>\r\n        }\r\n        else { return <Button variant=\"success\" className=\"loginButtonsStyle\" onClick={() => { alert('User not found!') }}>Enter</Button> }\r\n\r\n    }\r\n\r\n\r\n\r\n    //---------------------------------------\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <div className=\"loginHeader\">\r\n\r\n                <h1 className=\"headers\">Expenses App</h1>\r\n\r\n            </div>\r\n\r\n            <div className=\"loginBody\">\r\n\r\n                <div className=\"instructionsDiv\">\r\n\r\n                <p className=\"instructionsP\">user name: \"nir reich\", password:\"111111\" for user page</p>\r\n                <p className=\"instructionsP\">user name: \"admin\", password:\"admin\" for manager page</p>\r\n                </div>\r\n                \r\n                <div className=\"loginInpDiv\">\r\n\r\n                    <label>\r\n                        User Name\r\n                        <input type=\"text\" placeholder=\"user name\" className=\"loginInputs\" onChange={(e) => { setUser(e.target.value) }} />\r\n                    </label>\r\n\r\n                    <br />\r\n\r\n                    <label>\r\n                        Password\r\n                        <input type=\"Password\" placeholder=\"password\" className=\"loginInputs\" onChange={(e) => { setPassWord(e.target.value) }} />\r\n                    </label>\r\n\r\n                </div>\r\n\r\n                {setTheLink()}\r\n                <br/>\r\n                <br/>\r\n                <p >New in here?</p>\r\n                <Link to={'/register'}><Button variant=\"primary\" className=\"loginButtonsStyle\">Create New User</Button></Link>\r\n                \r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nexport default function Register(props) {\r\n\r\n    const [newClient, setNewClient] = useState({ id: '', name: '', password: '', money: '',premission: false, actions: [] });\r\n    const [passConf, setPassConf] = useState('')\r\n\r\n\r\n\r\n\r\n    let setData = (e) => {\r\n        let data = e.target.value\r\n        if (e.target.id === \"id\") {\r\n            if (isNaN(e.target.value)) {\r\n                alert('numbers only!')\r\n            }\r\n            else { setNewClient({ ...newClient, id: data }) }\r\n\r\n        }\r\n        else if (e.target.id === \"name\") {\r\n\r\n            setNewClient({ ...newClient, name: data })\r\n\r\n        }\r\n        else if (e.target.id === 'password') {\r\n\r\n            setNewClient({ ...newClient, password: data })\r\n\r\n        }\r\n        else if (e.target.id === \"passwordConf\") {\r\n            setPassConf(data)\r\n        }\r\n        else {\r\n\r\n            setNewClient({ ...newClient, money: data })\r\n\r\n        }\r\n    }\r\n\r\n    let sendClient = () => {\r\n        if (isNaN(newClient.id) === false && newClient.id.toString().length < 9) {\r\n            alert('i.d length must be 9 and numbers only!')\r\n        }\r\n        else if (newClient.name.length < 4) {\r\n            alert('name must be longer then 4 letters!')\r\n        }\r\n        else if (newClient.password.length < 6) {\r\n            alert('password must be at least 6 letters')\r\n        }\r\n        else if (newClient.password !== passConf) {\r\n            alert('password not same with confirme!')\r\n        }\r\n        else if (isNaN(newClient.money) || newClient.money > 1000000 || newClient.money < 0) {\r\n            alert('money amount must be between 0 and 1000000!')\r\n        }\r\n        else {\r\n            props.addClient(newClient)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <div className=\"registerHeader\">\r\n                <h1 className=\"headers\">Welcom New User</h1>\r\n            </div>\r\n\r\n\r\n            <h4>Please Register Here</h4>\r\n\r\n            <label>\r\n                User id:\r\n                <input type=\"text\" id=\"id\" className=\"registerInputs\" placeholder=\"id\" onChange={setData} />\r\n            </label>\r\n\r\n            <br />\r\n\r\n            <label>\r\n                User Name:\r\n                <input type=\"text\" id=\"name\" className=\"registerInputs\" placeholder=\"user name\" onChange={setData} />\r\n            </label>\r\n            <br />\r\n            <label>\r\n                Password:\r\n                <input type=\"text\" id=\"password\" className=\"registerInputs\" placeholder=\"Password\" onChange={setData} />\r\n            </label>\r\n            <br />\r\n            <label>\r\n                Confirm Password:\r\n                <input type=\"text\" id=\"passwordConf\" className=\"registerInputs\" placeholder=\"Confirm password\" onChange={setData} />\r\n            </label>\r\n            <br />\r\n            <label>\r\n                Cash Balance:\r\n                <input type=\"text\" id=\"money\" className=\"registerInputs\" placeholder=\" Cash Balance\" onChange={setData} />\r\n            </label>\r\n\r\n            <br />\r\n            <Link to={'/'}> <Button variant=\"success\" className=\"registerBtn\" onClick={() => { sendClient() }}>Create</Button></Link>\r\n\r\n            <br />\r\n            <Link to={'/'}><Button variant=\"primary\" className=\"registerBtn\">Back</Button></Link>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function BalanceChangeBox(props) {\r\n    const [newBalance,setNewBalance] = useState('')\r\n    \r\n    return (\r\n        <div className=\"balanceChangeCompContainer\">\r\n            <h3>Balance Change For {props.name}</h3>\r\n            <br/>\r\n            <p>Current Balance</p>\r\n            \r\n            <div className=\"balanceCahngeFrame\">\r\n            <h3>{props.balance}</h3>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <p>Enter new balance</p>\r\n                <input type=\"number\" placeholder=\"New Balance\" value={newBalance} onChange={(e) => { setNewBalance(e.target.value) }}/>\r\n                <br/>\r\n                <Button variant=\"success inAppButtons\" onClick={()=>{props.balanceChangeFunc(newBalance,props.index)}}>Confirm</Button>\r\n                <br/>\r\n                <Button variant=\"danger inAppButtons\" onClick={()=>{props.cancleBalanceChange()}}>Cancle</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport BalanceChangeBox from './BalanceChangeBox';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Button from 'react-bootstrap/Button'\r\nimport balanceCard from './BalanceCard';\r\n\r\n\r\n\r\nexport default function Manager(props) {\r\n\r\n    const [flag, setFlag] = useState(1)\r\n\r\n    const [showBalance, setShowBalance] = useState({\r\n        balanceFlag: false,\r\n        index: '',\r\n        balance: ''\r\n    })\r\n\r\n    const balanceChangeHandler = (clientIndex) => {\r\n        showBalance.balanceFlag = !showBalance.balanceFlag\r\n        showBalance.index = clientIndex\r\n        showBalance.balance = props.clients[clientIndex].name\r\n        setShowBalance({ ...showBalance })\r\n    }\r\n\r\n    const cancleBalanceChange = () => {\r\n        showBalance.balanceFlag = !showBalance.balanceFlag\r\n        setShowBalance({ ...showBalance })\r\n    }\r\n\r\n    const showBalanceChange = () => {\r\n        if (showBalance.balanceFlag) {\r\n            return <BalanceChangeBox cancleBalanceChange={cancleBalanceChange} name={props.clients[showBalance.index].name} index={showBalance.index} balance={props.clients[showBalance.index].money} balanceChangeFunc={props.balanceChangeFunc} />\r\n        }\r\n    }\r\n\r\n    const premissionBtn = (index) => {\r\n        if (props.clients[index].premission) {\r\n            return \"success\"\r\n        }\r\n        return \"danger\"\r\n    }\r\n\r\n    const showClients =()=>{\r\n        if (props.clients) {\r\n            \r\n        }\r\n    }\r\n\r\n    //---------------------------------------------------------------\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"adminHeader\">\r\n                <h1 className=\"headers\">Admin Page</h1>\r\n            </div>\r\n\r\n            {props.clients.map((element, clientIndex) => {\r\n                return <Accordion defaultActiveKey=\"0\">\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <h4 > {element.name}</h4>\r\n                            <h5 > {element.id}</h5>\r\n                            <div className=\"balanceFrameManeger\">\r\n                                <h3>{element.money}</h3>\r\n                            </div>\r\n\r\n\r\n                            <Accordion.Toggle as={Button} variant=\"link\" eventKey={flag}>\r\n                                <Button variant=\"primary inAppButtons\">Show</Button>\r\n                            </Accordion.Toggle>\r\n                            <br />\r\n                            <Button variant=\"danger inAppButtons\" onClick={() => { balanceChangeHandler(clientIndex) }}>Balance Cange</Button>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey={flag}>\r\n                            <Card.Body>\r\n\r\n                                {element.actions.map((e, actionIndex) => {\r\n                                    return (\r\n\r\n                                        <div className=\"row mb-1\">\r\n                                            <div className=\"col-1\"></div>\r\n                                            <div className=\"col-5\">{e.company}</div>\r\n                                            <div className=\"col-4\">{e.amount}</div>\r\n                                            <div className=\"col-1\"><Button variant={premissionBtn(clientIndex)} className=\"premissionBtn\" onClick={() => { props.changePremission(clientIndex) }}>premission</Button></div>\r\n                                            <div className=\"col-1\"><Button variant=\"danger\" onClick={() => { props.removeAction(clientIndex, actionIndex) }}>X </Button></div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                                <div className=\"row\"><Button variant=\"danger\" className=\"cancelBtn\" onClick={() => { props.removeClient(clientIndex) }}>Erase {element.name}</Button></div>\r\n\r\n                            </Card.Body>\r\n\r\n                        </Accordion.Collapse>\r\n\r\n                    </Card>\r\n                </Accordion>\r\n            })}\r\n\r\n            <br />\r\n\r\n            <Link to={'/'}>  <Button variant=\"primary\" className=\"inAppButtons\">Exit</Button></Link>\r\n\r\n            {showBalanceChange()}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default function Register(props) {\r\n\r\n    const [id, setId] = useState(props.clientEdit.client.id);\r\n    const [name, setName] = useState(props.clientEdit.client.name);\r\n    const [password, setPassword] = useState(props.clientEdit.client.password);\r\n    const [money, setMoney] = useState(props.clientEdit.client.money);\r\n    \r\n\r\n    let editClient = () => {//validation and if OK send it to clients list\r\n        if (isNaN(id) === false && id.toString().length < 9) {\r\n            alert('i.d length must be 9 and numbers only!')\r\n        }\r\n        else if (name.length < 4) {\r\n            alert('name must be longer then 4 letters!')\r\n        }\r\n        else if (password.length < 6) {\r\n            alert('password must be at least 6 letters')\r\n        }\r\n        else if (isNaN(money) || money > 1000000 || money < 0) {\r\n            alert('money amount must be between 0 and 1000000!')\r\n        }\r\n        else {\r\n            props.editClient(id, name, password, money, props.clientEdit.index)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"editRegisterHeader\">\r\n            <h1 className=\"headers\">Edit Details</h1>\r\n            </div>\r\n\r\n            <br />\r\n\r\n        <div className=\"editInputs\">\r\n            <label>\r\n                id:\r\n                <input className=\"editInp\" type=\"text\" id=\"id\" value={id} onChange={(e) => { setId(e.target.value) }} />\r\n            </label>\r\n            <br />\r\n            <label>\r\n                User Name:\r\n                <input className=\"editInp\" type=\"text\" id=\"name\" value={name} onChange={(e) => { setName(e.target.value) }} />\r\n            </label>\r\n            <br />\r\n            <label>\r\n                Password:\r\n                <input className=\"editInp\" type=\"text\" id=\"password\" value={password} onChange={(e) => { setPassword(e.target.value) }} />\r\n            </label>\r\n            <br />\r\n            <label>\r\n                Cash Balance:\r\n                <input className=\"editInp\" type=\"text\" id=\"money\" value={money} disabled={!props.clientEdit.client.premission} onChange={(e) => { setMoney(e.target.value) }}  />\r\n            </label>\r\n            </div>\r\n            <div className=\"editButtonsDiv\">\r\n            <Link to={'/'}> <Button variant=\"primary\" className=\"editButtons\" onClick={() => { editClient() }}>Edit</Button></Link>\r\n            <br />\r\n            \r\n            <Link to={`/${props.clientEdit.client.name}`}>  <Button variant=\"danger\" className=\"editButtons\">Back</Button></Link>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default function Transactions(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"transactionsHeader\">\r\n\r\n            <h3>Transactions List for {props.clients.name}</h3>\r\n            </div>\r\n        <div className=\"transactionsTable\">\r\n\r\n        \r\n            {/* transactions list map */}\r\n            {props.clients.actions.map((element, actionIndex) => {\r\n                return (\r\n\r\n                    <div className=\"row transactionsLines\">\r\n                        <div className=\"col-3\"></div>\r\n                        <div className=\"col-3 \">{element.company}</div>\r\n                        <div className=\"col-3\">{element.amount}</div>\r\n                        <div className=\"col-3\"></div>\r\n                    </div>\r\n                )\r\n            })}\r\n</div>\r\n            <Link to={`/${props.clients.name}`}> <Button variant=\"primary\" className=\"inAppButtons\">Back</Button> </Link>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Client from './Components/Client';\nimport Login from './Components/Login';\nimport Register from './Components/Register';\nimport Manager from './Components/Manager';\nimport Editregister from './Components/Editregister';\nimport Transactions from './Components/Transactions';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport const clientsContext = React.createContext();\n\n//-----------------------------------------------------------------------------------------------------------\nexport default function App() {\n  //hooks\n  const [clients, setClients] = useState([\n    { \n    id: '123456789',\n    name: 'nir reich',\n    password: '111111',\n    money: '10000',\n    premission: false,\n    actions: [{ company: 'shufersal', amount: '500' }, { company: 'sonol', amount: '250' }] \n  },\n    { \n    id: '987654321',\n    name: 'johnny amir',\n    password: '222222',\n    money: '20000',\n    premission: true,\n    actions: [{ company: 'pazgas', amount: '150' }, { company: 'castro', amount: '400' },]\n  }\n  ])\n  const [clientEdit, setClientEdit] = useState({ client: '', index: '' });\n\n  //methods\n  const addClient = (newClient) => {//add new client. from register comp\n    setClients([...clients, { ...newClient }])\n  }\n\n  const addAction = (comp, amount, index) => {//adds new action. from client comp\n    clients[index].actions.push({ company: comp, amount: amount })\n    clients[index].money = clients[index].money - amount\n    console.log(clients[index].money);\n    setClients([...clients]);\n  }\n\n\n\n//pick the spc client from clients for the login page\n  const pickClientName = (user) => {\n    for (let i = 0; i < clients.length; i++) {\n\n      if (clients[i].name === user ) {\n        return true;\n      }\n    }\n    return false;\n  }\n  const pickClientPassword = (password)=>{\n    for (let i = 0; i < clients.length; i++) {\n      if (clients[i].password === password) {\n        \n        return true;\n      }\n    }\n    return false;\n  }\n\n  const showActions = (i) => {//show action list on manager page\n\n    return clients[i].actions.map((e) => { return e.company })\n  }\n\n  const passClientToEdit = (i) => {//pick spc client to edit\n\n    setClientEdit({ client: clients[i], index: i });\n  }\n\n  const editClient = (id, name, password, money, index) => {// edit the client changes sent from edit page\n\n    clients[index].id = id\n    clients[index].name = name\n    clients[index].password = password\n    clients[index].money = money\n    setClients([...clients])\n  }\n\n  const removeAction = (clientIndex, actionIndex) => {//remove the actions from theclient list. from manager page\n    clients[clientIndex].actions.splice(actionIndex, 1)\n    setClients([...clients]);\n  }\n\n  const removeClient = (index) => {// remove client from clients list. from manager page.\n\n    clients.splice(index, 1)\n    setClients([...clients]);\n  }\n\n  const balanceChangeFunc= (balance,index)=>{\n    if (!isNaN(balance) && balance != '') {\n      clients[index].money = balance\n      setClients([...clients])\n\n    }\n  }\n\n  const changePremission =(index)=> {\n    clients[index].premission = !clients[index].premission\n    setClients()\n    setClients([...clients]);\n  }\n\n\n  //------------------------------------------------------------------------------\n  return (\n    <div className=\"App\">\n      <clientsContext.Provider value={{clients:clients, editClient:editClient}}>\n      <Router>\n\n        <Switch>\n          <Route exact path={'/'} component={() => { return <Login clients={clients} pickClientName={pickClientName} pickClientPassword={pickClientPassword} /> }} />\n\n          {clients.map((e, i) => { return <Route exact path={`/${e.name}`} component={() => { return   <Client addAction={addAction} user={clients[i]} index={i} passClientToEdit={passClientToEdit} clients={clients} /> }} /> })}\n          {clients.map((e, i) => { return <Route exact path={`/${e.name}_transactions`} component={() => { return <Transactions clients={clients[i]} /> }} /> })}\n          <Route exact path={'/register'} component={() => { return <Register addClient={addClient} /> }} />\n          <Route exact path={'/edit'} component={() => { return <Editregister editClient={editClient} clientEdit={clientEdit} addClient={addClient} /> }} />\n          <Route exact path={'/admin'} component={() => { return <Manager changePremission={changePremission} balanceChangeFunc={balanceChangeFunc} removeClient={removeClient} removeAction={removeAction} clients={clients} showActions={showActions} /> }} />\n\n        </Switch>\n      </Router>\n      </clientsContext.Provider>\n    </div>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}